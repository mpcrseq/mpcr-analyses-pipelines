singularity.enabled = true

process {
  executor = 'slurm'
  container = '/zstor/containers/singularity/mpcr-analyses-pipelines.img'
  queue = 'normal,control'
}

executor {
    name = 'slurm'
    queueSize = 100
}


/* PARAMS
output_prefix [string]
    Output files will be prefixed with this string
fastq_files_path [path]
    Input fastq files. Expects file pairs. See: https://www.nextflow.io/docs/latest/channel.html#fromfilepairs
trim_fastq_file [true/false]
    trimming is generally unnecessary, but might speed mapping up.
regex_fastq_name [/regex/]
   regular expression to extract sample name from fastq-file name. First saved match will be the sample name.
sample_name_file [FULL path to sample-name tsv]
    optional tab separated file mapping fastq file names to sample name (fastq_name\tsample_name).
bam_files_path [path]
    If not null, then bams in this directory will be used instead of mapping from fastqs. Sample names are the base bam name (sample_name.bam). The bams should be indexed (sample_name.bam.bai).
reference [FULL path to reference.fa]
    Reference fasta used for mapping
publish_directory [path to directory]
    All output files we be placed in this directory
targets [true / false]
    Call variants on targets only (requires targets bed).
whole_genome [true / false]
    Call variants on the whole genome.
targets_file [FULL path to a bcftools compatable regions file]
    Used if targets == true
    See http://www.htslib.org/doc/bcftools.html for acceptable file formats (--regions-file)
regions [path to regions tsv file]
    Optional file splitting the reference into regions for parallel variant calling (only used when whole_genome == true).
    The first column of the tsv is the tast name, the second column contains properly formatted region(s) (see See http://www.htslib.org/doc/bcftools.html)
    See fasta-generate-regions.py to create a regions file from a reference fasta.
maximum_depth [integer]
    bcftools limits the pileup to just a few hundred reads to limit memory usage. Set this to much higher (10,000 +)
*/


params {
  output_prefix     = 'mpcr-171012'
  fastq_files_path  = "../fastq-data/*R{1,2}_001.fastq.gz"
  trim_fastq_files  = false
  regex_fastq_ID    = /^(.+)_L001_R[1,2]_001$/
  sample_name_file  = "sample-rhino-map.tsv"
  bam_files_path    = null
  reference         = '/zstor/pcg/2017-rhino/reference/black_rhino_dovetail.fasta'
  publish_directory = 'outputs'
  targets           = true
  whole_genome      = false
  targets_file      = '/zstor/pcg/2017-rhino/paragon-pools/PGD191.coveredSNPs.tab'
  regions           = "/zstor/pcg/2017-rhino/reference/black_rhino_dovetail.fasta.regions.txt"
  maximum_depth     = 1000000
}

